// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  password  String
  role      UserRole  @default(OPERATOR)
  websites  Website[]
}

enum UserRole {
  DEVELOPER
  OPERATOR
  ADMIN
}

model Website {
  id            Int            @id @default(autoincrement())
  title         String
  localizedHtml LocalizedHtml[]
  users         User[]
  templateId    Int?
  template      Template?      @relation(fields: [templateId], references: [id])
  elements      Element[]
  isTemplate    Boolean        @default(false)
}

model LocalizedHtml {
  id        Int      @id @default(autoincrement())
  language  Language
  content   String
  websiteId Int
  website   Website  @relation(fields: [websiteId], references: [id])

  @@unique([websiteId, language])
}

enum Language {
  JP
  EN
  TW
  CN
}

model Template {
  id       Int       @id @default(autoincrement())
  name     String
  content  String
  websites Website[]
  elements Element[]
}

// ・ウェブサイトの編集中に新しいElementを追加し、それを他のウェブサイトやテンプレートで再利用することが可能
// ・ElementがWebsiteとTemplateの両方に関連付けられているため、同じElementを複数のWebsiteやTemplateで再利用することが可能
model Element {
  id          Int       @id @default(autoincrement())
  type        ElementType
  content     String
  websiteId   Int?
  website     Website?  @relation(fields: [websiteId], references: [id])
  templateId  Int?
  template    Template? @relation(fields: [templateId], references: [id])
}

enum ElementType {
  HEADER
  FOOTER
  H1
  H2
  H3
  H4
  H5
  H6
}